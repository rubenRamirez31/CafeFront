"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdb-react-ui-kit";
exports.ids = ["vendor-chunks/mdb-react-ui-kit"];
exports.modules = {

/***/ "(ssr)/./node_modules/mdb-react-ui-kit/node_modules/@popperjs/core/dist/cjs/popper.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mdb-react-ui-kit/node_modules/@popperjs/core/dist/cjs/popper.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * @popperjs/core v2.11.5 - MIT License\n */\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nvar max = Math.max;\nvar min = Math.min;\nvar round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = round(rect.width) / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = round(rect.height) / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}\n\nfunction getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}\n\nfunction getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n\nfunction getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n\nfunction getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n\nfunction getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n// means it doesn't take into account transforms.\n\nfunction getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}\n\nfunction getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nfunction listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nvar top = 'top';\nvar bottom = 'bottom';\nvar right = 'right';\nvar left = 'left';\nvar auto = 'auto';\nvar basePlacements = [top, bottom, right, left];\nvar start = 'start';\nvar end = 'end';\nvar clippingParents = 'clippingParents';\nvar viewport = 'viewport';\nvar popper = 'popper';\nvar reference = 'reference';\nvar variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nvar placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = 'beforeRead';\nvar read = 'read';\nvar afterRead = 'afterRead'; // pure-logic modifiers\n\nvar beforeMain = 'beforeMain';\nvar main = 'main';\nvar afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = 'beforeWrite';\nvar write = 'write';\nvar afterWrite = 'afterWrite';\nvar modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nfunction orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}\n\nfunction debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n\nfunction format(str) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return [].concat(args).reduce(function (p, c) {\n    return p.replace(/%s/, c);\n  }, str);\n}\n\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\nfunction validateModifiers(modifiers) {\n  modifiers.forEach(function (modifier) {\n    [].concat(Object.keys(modifier), VALID_PROPERTIES) // IE11-compatible replacement for `new Set(iterable)`\n    .filter(function (value, index, self) {\n      return self.indexOf(value) === index;\n    }).forEach(function (key) {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', \"\\\"\" + String(modifier.name) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', \"\\\"\" + String(modifier.enabled) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(', '), \"\\\"\" + String(modifier.phase) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'effect':\n          if (modifier.effect != null && typeof modifier.effect !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requires':\n          if (modifier.requires != null && !Array.isArray(modifier.requires)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', \"\\\"\" + String(modifier.requires) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', \"\\\"\" + String(modifier.requiresIfExists) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'options':\n        case 'data':\n          break;\n\n        default:\n          console.error(\"PopperJS: an invalid property has been provided to the \\\"\" + modifier.name + \"\\\" modifier, valid properties are \" + VALID_PROPERTIES.map(function (s) {\n            return \"\\\"\" + s + \"\\\"\";\n          }).join(', ') + \"; but \\\"\" + key + \"\\\" was provided.\");\n      }\n\n      modifier.requires && modifier.requires.forEach(function (requirement) {\n        if (modifiers.find(function (mod) {\n          return mod.name === requirement;\n        }) == null) {\n          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n        }\n      });\n    });\n  });\n}\n\nfunction uniqueBy(arr, fn) {\n  var identifiers = new Set();\n  return arr.filter(function (item) {\n    var identifier = fn(item);\n\n    if (!identifiers.has(identifier)) {\n      identifiers.add(identifier);\n      return true;\n    }\n  });\n}\n\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n\nfunction mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}\n\nfunction getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}\n\nfunction contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}\n\nfunction rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n\nfunction getVariation(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n\nfunction computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n    }\n  }\n\n  return offsets;\n}\n\nfunction getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n\nfunction mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}\n\nfunction expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nfunction popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (true) {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (true) {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (true) {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (true) {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\n\nvar passive = {\n  passive: true\n};\n\nfunction effect$2(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar eventListeners = {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect$2,\n  data: {}\n};\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar popperOffsets$1 = {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nfunction mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (true) {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar computeStyles$1 = {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};\n\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect$1(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar applyStyles$1 = {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect$1,\n  requires: ['computeStyles']\n};\n\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar offset$1 = {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};\n\nvar hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash$1[matched];\n  });\n}\n\nvar hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}\n\nfunction computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements$1.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements$1;\n\n    if (true) {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar flip$1 = {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};\n\nfunction getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\nfunction withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min$1 = offset + overflow[mainSide];\n    var max$1 = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar preventOverflow$1 = {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (true) {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (true) {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar arrow$1 = {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nvar hide$1 = {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};\n\nvar defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];\nvar createPopper$1 = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers$1\n}); // eslint-disable-next-line import/no-unused-modules\n\nvar defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexports.applyStyles = applyStyles$1;\nexports.arrow = arrow$1;\nexports.computeStyles = computeStyles$1;\nexports.createPopper = createPopper;\nexports.createPopperLite = createPopper$1;\nexports.defaultModifiers = defaultModifiers;\nexports.detectOverflow = detectOverflow;\nexports.eventListeners = eventListeners;\nexports.flip = flip$1;\nexports.hide = hide$1;\nexports.offset = offset$1;\nexports.popperGenerator = popperGenerator;\nexports.popperOffsets = popperOffsets$1;\nexports.preventOverflow = preventOverflow$1;\n//# sourceMappingURL=popper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdb-react-ui-kit/node_modules/@popperjs/core/dist/cjs/popper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mdb-react-ui-kit/dist/mdb-react-ui-kit.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/mdb-react-ui-kit/dist/mdb-react-ui-kit.esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MDBAccordion: () => (/* binding */ _t),\n/* harmony export */   MDBAccordionItem: () => (/* binding */ jt),\n/* harmony export */   MDBBadge: () => (/* binding */ Ie),\n/* harmony export */   MDBBreadcrumb: () => (/* binding */ qe),\n/* harmony export */   MDBBreadcrumbItem: () => (/* binding */ Ke),\n/* harmony export */   MDBBtn: () => (/* binding */ le),\n/* harmony export */   MDBBtnGroup: () => (/* binding */ ke),\n/* harmony export */   MDBCard: () => (/* binding */ Ce),\n/* harmony export */   MDBCardBody: () => (/* binding */ He),\n/* harmony export */   MDBCardFooter: () => (/* binding */ We),\n/* harmony export */   MDBCardGroup: () => (/* binding */ _e),\n/* harmony export */   MDBCardHeader: () => (/* binding */ Ae),\n/* harmony export */   MDBCardImage: () => (/* binding */ Qt),\n/* harmony export */   MDBCardLink: () => (/* binding */ Zt),\n/* harmony export */   MDBCardOverlay: () => (/* binding */ Xe),\n/* harmony export */   MDBCardSubTitle: () => (/* binding */ Pe),\n/* harmony export */   MDBCardText: () => (/* binding */ Oe),\n/* harmony export */   MDBCardTitle: () => (/* binding */ Fe),\n/* harmony export */   MDBCarousel: () => (/* binding */ Ns),\n/* harmony export */   MDBCarouselCaption: () => (/* binding */ Bs),\n/* harmony export */   MDBCarouselItem: () => (/* binding */ ws),\n/* harmony export */   MDBCheckbox: () => (/* binding */ ns),\n/* harmony export */   MDBCol: () => (/* binding */ Ee),\n/* harmony export */   MDBCollapse: () => (/* binding */ dt),\n/* harmony export */   MDBContainer: () => (/* binding */ $e),\n/* harmony export */   MDBDropdown: () => (/* binding */ os),\n/* harmony export */   MDBDropdownItem: () => (/* binding */ cs),\n/* harmony export */   MDBDropdownMenu: () => (/* binding */ ls),\n/* harmony export */   MDBDropdownToggle: () => (/* binding */ is),\n/* harmony export */   MDBFile: () => (/* binding */ ys),\n/* harmony export */   MDBFooter: () => (/* binding */ st),\n/* harmony export */   MDBIcon: () => (/* binding */ es),\n/* harmony export */   MDBInput: () => (/* binding */ it),\n/* harmony export */   MDBInputGroup: () => (/* binding */ Rt),\n/* harmony export */   MDBListGroup: () => (/* binding */ je),\n/* harmony export */   MDBListGroupItem: () => (/* binding */ Ge),\n/* harmony export */   MDBModal: () => (/* binding */ fs),\n/* harmony export */   MDBModalBody: () => (/* binding */ Mt),\n/* harmony export */   MDBModalContent: () => (/* binding */ Nt),\n/* harmony export */   MDBModalDialog: () => (/* binding */ yt),\n/* harmony export */   MDBModalFooter: () => (/* binding */ Dt),\n/* harmony export */   MDBModalHeader: () => (/* binding */ wt),\n/* harmony export */   MDBModalTitle: () => (/* binding */ Bt),\n/* harmony export */   MDBNavbar: () => (/* binding */ Je),\n/* harmony export */   MDBNavbarBrand: () => (/* binding */ Ze),\n/* harmony export */   MDBNavbarItem: () => (/* binding */ ze),\n/* harmony export */   MDBNavbarLink: () => (/* binding */ Qe),\n/* harmony export */   MDBNavbarNav: () => (/* binding */ et),\n/* harmony export */   MDBNavbarToggler: () => (/* binding */ tt),\n/* harmony export */   MDBPagination: () => (/* binding */ rt),\n/* harmony export */   MDBPaginationItem: () => (/* binding */ at),\n/* harmony export */   MDBPaginationLink: () => (/* binding */ nt),\n/* harmony export */   MDBPopover: () => (/* binding */ ds),\n/* harmony export */   MDBPopoverBody: () => (/* binding */ us),\n/* harmony export */   MDBPopoverHeader: () => (/* binding */ ms),\n/* harmony export */   MDBProgress: () => (/* binding */ ot),\n/* harmony export */   MDBProgressBar: () => (/* binding */ Ne),\n/* harmony export */   MDBRadio: () => (/* binding */ as),\n/* harmony export */   MDBRange: () => (/* binding */ vs),\n/* harmony export */   MDBRipple: () => (/* binding */ ye),\n/* harmony export */   MDBRow: () => (/* binding */ Ye),\n/* harmony export */   MDBScrollspy: () => (/* binding */ ps),\n/* harmony export */   MDBScrollspyLink: () => (/* binding */ gs),\n/* harmony export */   MDBScrollspySubList: () => (/* binding */ hs),\n/* harmony export */   MDBSpinner: () => (/* binding */ Se),\n/* harmony export */   MDBSwitch: () => (/* binding */ bs),\n/* harmony export */   MDBTable: () => (/* binding */ ts),\n/* harmony export */   MDBTableBody: () => (/* binding */ rs),\n/* harmony export */   MDBTableHead: () => (/* binding */ ss),\n/* harmony export */   MDBTabs: () => (/* binding */ Et),\n/* harmony export */   MDBTabsContent: () => (/* binding */ xt),\n/* harmony export */   MDBTabsItem: () => (/* binding */ It),\n/* harmony export */   MDBTabsLink: () => (/* binding */ Lt),\n/* harmony export */   MDBTabsPane: () => (/* binding */ kt),\n/* harmony export */   MDBTextArea: () => (/* binding */ Ms),\n/* harmony export */   MDBTooltip: () => (/* binding */ zt),\n/* harmony export */   MDBTypography: () => (/* binding */ Ve),\n/* harmony export */   MDBValidation: () => (/* binding */ $t),\n/* harmony export */   MDBValidationItem: () => (/* binding */ Ds)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var react_popper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-popper */ \"(ssr)/./node_modules/react-popper/lib/cjs/index.js\");\n/* harmony import */ var _popperjs_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @popperjs/core */ \"(ssr)/./node_modules/mdb-react-ui-kit/node_modules/@popperjs/core/dist/cjs/popper.js\");\n(function(){\"use strict\";try{if(typeof document!=\"undefined\"){var o=document.createElement(\"style\");o.appendChild(document.createTextNode(\".dropdown-menu .active:not(.form-control){color:#16181b;background-color:#eee}.dropdown-menu [data-active=true] a.dropdown-item,.dropdown-menu .dropdown-item:focus,.dropdown-menu li:focus .dropdown-item :not(.disabled){color:#16181b;background-color:#eee}.dropdown-menu li:focus{outline:none}.dropdown-menu.dropdown-menu-dark [data-active=true] a.dropdown-item,.dropdown-menu.dropdown-menu-dark .dropdown-item:focus,.dropdown-menu.dropdown-menu-dark li:focus .dropdown-item{color:#fff;background-color:#1266f1}.btn-group.dropstart>.dropdown-menu{right:0!important}\")),document.head.appendChild(o)}}catch(d){console.error(\"vite-plugin-css-injected-by-js\",d)}})();\n\n\n\n\n\n\nconst $e = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ breakpoint: e, fluid: t, children: s, className: r, tag: n = \"div\", ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(`${t ? \"container-fluid\" : `container${e ? \"-\" + e : \"\"}`}`, r);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(n, { className: o, ...a, ref: c, children: s });\n  }\n);\n$e.displayName = \"MDBContainer\";\nconst Ee = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    center: e,\n    children: t,\n    className: s,\n    end: r,\n    lg: n,\n    md: a,\n    offsetLg: c,\n    offsetMd: o,\n    offsetSm: i,\n    order: u,\n    size: d,\n    sm: p,\n    start: m,\n    tag: g = \"div\",\n    xl: h,\n    xxl: v,\n    xs: b,\n    ...T\n  }, R) => {\n    const N = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      d && `col-${d}`,\n      b && `col-xs-${b}`,\n      p && `col-sm-${p}`,\n      a && `col-md-${a}`,\n      n && `col-lg-${n}`,\n      h && `col-xl-${h}`,\n      v && `col-xxl-${v}`,\n      !d && !b && !p && !a && !n && !h && !v ? \"col\" : \"\",\n      u && `order-${u}`,\n      m && \"align-self-start\",\n      e && \"align-self-center\",\n      r && \"align-self-end\",\n      i && `offset-sm-${i}`,\n      o && `offset-md-${o}`,\n      c && `offset-lg-${c}`,\n      s\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(g, { className: N, ref: R, ...T, children: t });\n  }\n);\nEe.displayName = \"MDBCol\";\nconst Ie = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, color: t = \"primary\", pill: s, light: r, dot: n, tag: a = \"span\", children: c, notification: o, ...i }, u) => {\n    const d = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"badge\",\n      r ? t && `badge-${t}` : t && `bg-${t}`,\n      n && \"badge-dot\",\n      s && \"rounded-pill\",\n      o && \"badge-notification\",\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a, { className: d, ref: u, ...i, children: c });\n  }\n);\nIe.displayName = \"MDBBadge\";\nconst Le = ({ ...e }) => {\n  const [t, s] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), r = clsx__WEBPACK_IMPORTED_MODULE_2__(\"ripple-wave\", t && \"active\");\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const n = setTimeout(() => {\n      s(!0);\n    }, 50);\n    return () => {\n      clearTimeout(n);\n    };\n  }, []), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: r, ...e });\n}, xe = (...e) => {\n  const t = react__WEBPACK_IMPORTED_MODULE_1__.useRef();\n  return react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    e.forEach((s) => {\n      s && (typeof s == \"function\" ? s(t.current) : s.current = t.current);\n    });\n  }, [e]), t;\n}, ye = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    className: e,\n    rippleTag: t = \"div\",\n    rippleCentered: s,\n    rippleDuration: r = 500,\n    rippleUnbound: n,\n    rippleRadius: a = 0,\n    rippleColor: c = \"dark\",\n    children: o,\n    onMouseDown: i,\n    ...u\n  }, d) => {\n    const p = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), m = xe(d, p), g = \"rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%\", h = [0, 0, 0], v = [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"], [b, T] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]), [R, N] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), k = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"ripple\",\n      \"ripple-surface\",\n      n && \"ripple-surface-unbound\",\n      R && `ripple-surface-${c}`,\n      e\n    ), D = () => {\n      if (v.find((L) => L === (c == null ? void 0 : c.toLowerCase())))\n        return N(!0);\n      {\n        const L = S(c).join(\",\");\n        return `radial-gradient(circle, ${g.split(\"{{color}}\").join(`${L}`)})`;\n      }\n    }, S = (w) => {\n      const L = ($) => ($.length < 7 && ($ = `#${$[1]}${$[1]}${$[2]}${$[2]}${$[3]}${$[3]}`), [parseInt($.substr(1, 2), 16), parseInt($.substr(3, 2), 16), parseInt($.substr(5, 2), 16)]), I = ($) => {\n        const C = document.body.appendChild(document.createElement(\"fictum\")), H = \"rgb(1, 2, 3)\";\n        return C.style.color = H, C.style.color !== H || (C.style.color = $, C.style.color === H || C.style.color === \"\") ? h : ($ = getComputedStyle(C).color, document.body.removeChild(C), $);\n      }, O = ($) => ($ = $.match(/[.\\d]+/g).map((C) => +Number(C)), $.length = 3, $);\n      return w.toLowerCase() === \"transparent\" ? h : w[0] === \"#\" ? L(w) : (w.indexOf(\"rgb\") === -1 && (w = I(w)), w.indexOf(\"rgb\") === 0 ? O(w) : h);\n    }, E = (w) => {\n      const { offsetX: L, offsetY: I, height: O, width: $ } = w, C = I <= O / 2, H = L <= $ / 2, P = (Y, Q) => Math.sqrt(Y ** 2 + Q ** 2), X = I === O / 2 && L === $ / 2, G = {\n        first: C === !0 && H === !1,\n        second: C === !0 && H === !0,\n        third: C === !1 && H === !0,\n        fourth: C === !1 && H === !1\n      }, _ = {\n        topLeft: P(L, I),\n        topRight: P($ - L, I),\n        bottomLeft: P(L, O - I),\n        bottomRight: P($ - L, O - I)\n      };\n      let J = 0;\n      return X || G.fourth ? J = _.topLeft : G.third ? J = _.topRight : G.second ? J = _.bottomRight : G.first && (J = _.bottomLeft), J * 2;\n    }, F = (w) => {\n      var J;\n      const L = (J = m.current) == null ? void 0 : J.getBoundingClientRect(), I = w.clientX - L.left, O = w.clientY - L.top, $ = L.height, C = L.width, H = {\n        offsetX: s ? $ / 2 : I,\n        offsetY: s ? C / 2 : O,\n        height: $,\n        width: C\n      }, P = {\n        delay: r && r * 0.5,\n        duration: r && r - r * 0.5\n      }, X = E(H), G = a || X / 2, _ = {\n        left: s ? `${C / 2 - G}px` : `${I - G}px`,\n        top: s ? `${$ / 2 - G}px` : `${O - G}px`,\n        height: a ? `${a * 2}px` : `${X}px`,\n        width: a ? `${a * 2}px` : `${X}px`,\n        transitionDelay: `0s, ${P.delay}ms`,\n        transitionDuration: `${r}ms, ${P.duration}ms`\n      };\n      return R ? _ : { ..._, backgroundImage: `${D()}` };\n    }, W = (w) => {\n      const L = F(w), I = b.concat(L);\n      T(I), i && i(w);\n    };\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      const w = setTimeout(() => {\n        b.length > 0 && T(b.splice(1, b.length - 1));\n      }, r);\n      return () => {\n        clearTimeout(w);\n      };\n    }, [r, b]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(t, { className: k, onMouseDown: (w) => W(w), ref: m, ...u, children: [\n      o,\n      b.map((w, L) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Le, { style: w }, L))\n    ] });\n  }\n);\nye.displayName = \"MDBRipple\";\nconst le = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    className: e,\n    color: t = \"primary\",\n    outline: s,\n    children: r,\n    rounded: n,\n    disabled: a,\n    floating: c,\n    size: o,\n    href: i,\n    block: u,\n    active: d,\n    toggle: p,\n    noRipple: m,\n    tag: g = \"button\",\n    role: h = \"button\",\n    ...v\n  }, b) => {\n    const [T, R] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(d || !1);\n    let N;\n    const k = t && [\"light\", \"link\"].includes(t) || s ? \"dark\" : \"light\";\n    t !== \"none\" ? s ? t ? N = `btn-outline-${t}` : N = \"btn-outline-primary\" : t ? N = `btn-${t}` : N = \"btn-primary\" : N = \"\";\n    const D = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      t !== \"none\" && \"btn\",\n      N,\n      n && \"btn-rounded\",\n      c && \"btn-floating\",\n      o && `btn-${o}`,\n      `${(i || g !== \"button\") && a ? \"disabled\" : \"\"}`,\n      u && \"btn-block\",\n      T && \"active\",\n      e\n    );\n    return i && g !== \"a\" && (g = \"a\"), [\"hr\", \"img\", \"input\"].includes(g) || m ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      g,\n      {\n        className: D,\n        onClick: p ? () => {\n          R(!T);\n        } : void 0,\n        disabled: a && g === \"button\" ? !0 : void 0,\n        href: i,\n        ref: b,\n        role: h,\n        ...v,\n        children: r\n      }\n    ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      ye,\n      {\n        rippleTag: g,\n        rippleColor: k,\n        className: D,\n        onClick: p ? () => {\n          R(!T);\n        } : void 0,\n        disabled: a && g === \"button\" ? !0 : void 0,\n        href: i,\n        ref: b,\n        role: h,\n        ...v,\n        children: r\n      }\n    );\n  }\n);\nle.displayName = \"MDBBtn\";\nconst ke = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, shadow: s, toolbar: r, size: n, vertical: a, tag: c = \"div\", role: o = \"group\", ...i }, u) => {\n    let d;\n    r ? d = \"btn-toolbar\" : a ? d = \"btn-group-vertical\" : d = \"btn-group\";\n    const p = clsx__WEBPACK_IMPORTED_MODULE_2__(d, s && `shadow-${s}`, n && `btn-group-${n}`, e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(c, { className: p, ref: u, role: o, ...i, children: t });\n  }\n);\nke.displayName = \"MDBBtnGroup\";\nconst Se = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", color: r, grow: n, size: a, ...c }, o) => {\n    const i = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      `${n ? \"spinner-grow\" : \"spinner-border\"}`,\n      r && `text-${r}`,\n      `${a ? n ? \"spinner-grow-\" + a : \"spinner-border-\" + a : \"\"}`,\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: i, ref: o, ...c, children: t });\n  }\n);\nSe.displayName = \"MDBSpinner\";\nconst Ce = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, border: s, background: r, tag: n = \"div\", shadow: a, alignment: c, ...o }, i) => {\n    const u = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"card\",\n      s && `border border-${s}`,\n      r && `bg-${r}`,\n      a && `shadow-${a}`,\n      c && `text-${c}`,\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(n, { className: u, ref: i, ...o, children: t });\n  }\n);\nCe.displayName = \"MDBCard\";\nconst Ae = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, border: s, background: r, tag: n = \"div\", ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-header\", s && `border-${s}`, r && `bg-${r}`, e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(n, { className: o, ...a, ref: c, children: t });\n  }\n);\nAe.displayName = \"MDBCardHeader\";\nconst Pe = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"p\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-subtitle\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nPe.displayName = \"MDBCardSubTitle\";\nconst Fe = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"h5\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-title\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nFe.displayName = \"MDBCardTitle\";\nconst Oe = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"p\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-text\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nOe.displayName = \"MDBCardText\";\nconst He = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-body\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nHe.displayName = \"MDBCardBody\";\nconst We = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, border: s, background: r, tag: n = \"div\", ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-footer\", s && `border-${s}`, r && `bg-${r}`, e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(n, { className: o, ...a, ref: c, children: t });\n  }\n);\nWe.displayName = \"MDBCardFooter\";\nconst Qt = ({ className: e, children: t, overlay: s, position: r, fluid: n, ...a }) => {\n  const c = clsx__WEBPACK_IMPORTED_MODULE_2__(r && `card-img-${r}`, n && \"img-fluid\", s && \"card-img\", e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { className: c, ...a, children: t });\n}, Xe = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-img-overlay\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nXe.displayName = \"MDBCardOverlay\";\nconst Zt = ({ className: e, children: t, ...s }) => {\n  const r = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-link\", e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { className: r, ...s, children: t });\n}, _e = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"card-group\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\n_e.displayName = \"MDBCardGroup\";\nconst je = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, tag: t = \"ul\", horizontal: s, horizontalSize: r, light: n, numbered: a, children: c, small: o, ...i }, u) => {\n    const d = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"list-group\",\n      s && (r ? `list-group-horizontal-${r}` : \"list-group-horizontal\"),\n      n && \"list-group-light\",\n      a && \"list-group-numbered\",\n      o && \"list-group-small\",\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t, { className: d, ref: u, ...i, children: c });\n  }\n);\nje.displayName = \"MDBListGroup\";\nconst Ge = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, tag: t = \"li\", active: s, disabled: r, action: n, color: a, children: c, noBorders: o, ...i }, u) => {\n    const d = t === \"button\", p = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"list-group-item\",\n      s && \"active\",\n      r && !d && \"disabled\",\n      n && \"list-group-item-action\",\n      a && `list-group-item-${a}`,\n      o && \"border-0\",\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t, { className: p, disabled: d && r, ref: u, ...i, children: c });\n  }\n);\nGe.displayName = \"MDBListGroupItem\";\nconst zt = ({\n  className: e,\n  children: t,\n  disableMouseDown: s,\n  tag: r = le,\n  tooltipTag: n = \"div\",\n  options: a,\n  placement: c = \"top\",\n  title: o,\n  wrapperProps: i,\n  wrapperClass: u,\n  onOpen: d,\n  onClose: p,\n  onMouseEnter: m,\n  onMouseLeave: g,\n  ...h\n}) => {\n  const [v, b] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [T, R] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [N, k] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [D, S] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [E, F] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [W, w] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), L = clsx__WEBPACK_IMPORTED_MODULE_2__(\"tooltip\", E && \"show\", \"fade\", e), { styles: I, attributes: O } = (0,react_popper__WEBPACK_IMPORTED_MODULE_4__.usePopper)(v, T, {\n    placement: c,\n    ...a\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    let P, X;\n    return N || D ? (w(!0), P = setTimeout(() => {\n      F(!0);\n    }, 4)) : (F(!1), X = setTimeout(() => {\n      w(!1);\n    }, 300)), () => {\n      clearTimeout(P), clearTimeout(X);\n    };\n  }, [N, D]);\n  const $ = (P) => {\n    d == null || d(P), !P.defaultPrevented && k(!0), m == null || m(P);\n  }, C = (P) => {\n    p == null || p(P), !P.defaultPrevented && k(!1), g == null || g(P);\n  }, H = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (P) => {\n      P.target === v ? S(!0) : S(!1);\n    },\n    [v]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!s)\n      return document.addEventListener(\"mousedown\", H), () => {\n        document.removeEventListener(\"mousedown\", H);\n      };\n  }, [H, s]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      r,\n      {\n        className: u,\n        onMouseEnter: $,\n        onMouseLeave: C,\n        ref: b,\n        ...i,\n        children: t\n      }\n    ),\n    W && react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal(\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        n,\n        {\n          ref: R,\n          className: L,\n          style: I.popper,\n          ...O.popper,\n          role: \"tooltip\",\n          ...h,\n          children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"tooltip-inner\", children: o })\n        }\n      ),\n      document.body\n    )\n  ] });\n}, Ye = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    around: e,\n    between: t,\n    bottom: s,\n    center: r,\n    children: n,\n    className: a,\n    evenly: c,\n    end: o,\n    middle: i,\n    start: u,\n    tag: d = \"div\",\n    top: p,\n    ...m\n  }, g) => {\n    const h = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"row\",\n      e && \"justify-content-around\",\n      t && \"justify-content-between\",\n      s && \"align-self-end\",\n      r && \"justify-content-center\",\n      c && \"justifty-content-evenly\",\n      o && \"justify-content-end\",\n      i && \"align-self-center\",\n      u && \"justify-content-start\",\n      p && \"align-self-start\",\n      a\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(d, { className: h, ...m, ref: g, children: n });\n  }\n);\nYe.displayName = \"MDBRow\";\nconst es = ({\n  animate: e,\n  className: t,\n  icon: s,\n  fab: r,\n  fas: n,\n  fal: a,\n  far: c,\n  flag: o,\n  spin: i,\n  fixed: u,\n  flip: d,\n  list: p,\n  size: m,\n  pull: g,\n  pulse: h,\n  color: v,\n  border: b,\n  rotate: T,\n  inverse: R,\n  stack: N,\n  iconType: k,\n  children: D,\n  ...S\n}) => {\n  let E;\n  o ? E = \"flag\" : r ? E = \"fab\" : n ? E = \"fas\" : c ? E = \"far\" : a ? E = \"fal\" : E = \"fa\";\n  const F = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    k ? `fa-${k}` : E,\n    e && `fa-${e}`,\n    o ? `flag-${o}` : s && `fa-${s}`,\n    m && `fa-${m}`,\n    v && `text-${v}`,\n    b && \"fa-border\",\n    T && `fa-rotate-${T}`,\n    g && `fa-pull-${g}`,\n    i && !e && \"fa-spin\",\n    p && \"fa-li\",\n    u && \"fa-fw\",\n    h && !e && \"fa-pulse\",\n    R && \"fa-inverse\",\n    d && `fa-flip-${d}`,\n    N && `fa-stack-${N}`,\n    t\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"i\", { className: F, ...S, children: D });\n}, Ve = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    className: e,\n    children: t,\n    tag: s = \"p\",\n    variant: r,\n    color: n,\n    blockquote: a,\n    note: c,\n    noteColor: o,\n    listUnStyled: i,\n    listInLine: u,\n    ...d\n  }, p) => {\n    const m = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      r && r,\n      a && \"blockquote\",\n      c && \"note\",\n      n && `text-${n}`,\n      o && `note-${o}`,\n      i && \"list-unstyled\",\n      u && \"list-inline\",\n      e\n    );\n    return a && (s = \"blockquote\"), (i || u) && (s = \"ul\"), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: m, ref: p, ...d, children: t });\n  }\n);\nVe.displayName = \"MDBTypography\";\nconst qe = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, color: t, uppercase: s, bold: r, children: n, ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"breadcrumb\",\n      r && \"font-weight-bold\",\n      t && `text-${t}`,\n      s && \"text-uppercase\",\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"nav\", { \"aria-label\": \"breadcrumb\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ol\", { className: o, ref: c, ...a, children: n }) });\n  }\n);\nqe.displayName = \"MDBBreadcrumb\";\nconst Ke = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, active: t, current: s = \"page\", children: r, ...n }, a) => {\n    const c = clsx__WEBPACK_IMPORTED_MODULE_2__(\"breadcrumb-item\", t && \"active\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", { className: c, ref: a, \"aria-current\": t && s, ...n, children: r });\n  }\n);\nKe.displayName = \"MDBBreadcrumbItem\";\nconst Ue = (e) => {\n  if (e !== !1)\n    return `navbar-expand-${e}`;\n}, Je = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    className: e,\n    children: t,\n    light: s,\n    dark: r,\n    scrolling: n,\n    fixed: a,\n    sticky: c,\n    scrollingNavbarOffset: o,\n    color: i,\n    transparent: u,\n    expand: d,\n    tag: p = \"nav\",\n    bgColor: m,\n    ...g\n  }, h) => {\n    const [v, b] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), T = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      {\n        \"navbar-light\": s,\n        \"navbar-dark\": r,\n        \"scrolling-navbar\": n || o,\n        \"top-nav-collapse\": v,\n        [`text-${i}`]: i && u ? v : i\n      },\n      a && `fixed-${a}`,\n      c && \"sticky-top\",\n      \"navbar\",\n      d && Ue(d),\n      m && `bg-${m}`,\n      e\n    ), R = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n      o && window.pageYOffset > o ? b(!0) : b(!1);\n    }, [o]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => ((n || o) && window.addEventListener(\"scroll\", R), () => {\n      window.removeEventListener(\"scroll\", R);\n    }), [R, n, o]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(p, { className: T, role: \"navigation\", ...g, ref: h, children: t });\n  }\n);\nJe.displayName = \"MDBNavbar\";\nconst Qe = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, className: t = \"\", disabled: s = !1, active: r = !1, tag: n = \"a\", ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"nav-link\", s ? \"disabled\" : r ? \"active\" : \"\", t);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(n, { \"data-test\": \"nav-link\", className: o, style: { cursor: \"pointer\" }, ref: c, ...a, children: e });\n  }\n);\nQe.displayName = \"MDBNavbarLink\";\nconst Ze = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"a\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"navbar-brand\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ref: n, ...r, children: t });\n  }\n);\nZe.displayName = \"MDBNavbarBrand\";\nconst ze = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, className: t, active: s, text: r, tag: n = \"li\", ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"nav-item\", s && \"active\", r && \"navbar-text\", t);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(n, { ...a, className: o, ref: c, children: e });\n  }\n);\nze.displayName = \"MDBNavbarItem\";\nconst et = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, className: t, right: s, fullWidth: r = !0, left: n, tag: a = \"ul\", ...c }, o) => {\n    const i = clsx__WEBPACK_IMPORTED_MODULE_2__(\"navbar-nav\", r && \"w-100\", s && \"ms-auto\", n && \"me-auto\", t);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a, { className: i, ref: o, ...c, children: e });\n  }\n);\net.displayName = \"MDBNavbarNav\";\nconst tt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, className: t, tag: s = \"button\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"navbar-toggler\", t);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { ...r, className: a, ref: n, children: e });\n  }\n);\ntt.displayName = \"MDBNavbarToggler\";\nconst st = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, bgColor: t, color: s, className: r, ...n }, a) => {\n    const c = clsx__WEBPACK_IMPORTED_MODULE_2__(t && `bg-${t}`, s && `text-${s}`, r);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"footer\", { className: c, ...n, ref: a, children: e });\n  }\n);\nst.displayName = \"MDBFooter\";\nconst rt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, size: t, circle: s, center: r, end: n, start: a, className: c, ...o }, i) => {\n    const u = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"pagination\",\n      r && \"justify-content-center\",\n      s && \"pagination-circle\",\n      n && \"justify-content-end\",\n      t && `pagination-${t}`,\n      a && \"justify-content-start\",\n      c\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", { className: u, ...o, ref: i, children: e });\n  }\n);\nrt.displayName = \"MDBPagination\";\nconst nt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, className: t, tag: s = \"a\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"page-link\", t);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: e });\n  }\n);\nnt.displayName = \"MDBPaginationLink\";\nconst at = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ children: e, className: t, active: s, disabled: r, ...n }, a) => {\n    const c = clsx__WEBPACK_IMPORTED_MODULE_2__(\"page-item\", s && \"active\", r && \"disabled\", t);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", { className: c, ...n, ref: a, children: e });\n  }\n);\nat.displayName = \"MDBPaginationItem\";\nconst ts = ({\n  className: e,\n  classNameResponsive: t,\n  responsive: s,\n  align: r,\n  borderColor: n,\n  bordered: a,\n  borderless: c,\n  children: o,\n  color: i,\n  hover: u,\n  small: d,\n  striped: p,\n  ...m\n}) => {\n  const g = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    \"table\",\n    r && `align-${r}`,\n    n && `border-${n}`,\n    a && \"table-bordered\",\n    c && \"table-borderless\",\n    i && `table-${i}`,\n    u && \"table-hover\",\n    d && \"table-sm\",\n    p && \"table-striped\",\n    e\n  ), h = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"table\", { className: g, ...m, children: o }), [o, g, m]);\n  if (s) {\n    const v = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      typeof s == \"string\" ? `table-responsive-${s}` : \"table-responsive\",\n      t\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: v, children: h });\n  } else\n    return h;\n}, ss = ({ className: e, children: t, dark: s, light: r, ...n }) => {\n  const a = clsx__WEBPACK_IMPORTED_MODULE_2__(s && \"table-dark\", r && \"table-light\", e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"thead\", { className: a, ...n, children: t });\n}, rs = ({ className: e, children: t, ...s }) => {\n  const r = clsx__WEBPACK_IMPORTED_MODULE_2__(e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tbody\", { className: r, ...s, children: t });\n}, Ne = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    animated: e,\n    children: t,\n    className: s,\n    style: r,\n    tag: n = \"div\",\n    valuenow: a,\n    valuemax: c,\n    striped: o,\n    bgColor: i,\n    valuemin: u,\n    width: d,\n    ...p\n  }, m) => {\n    const g = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"progress-bar\",\n      i && `bg-${i}`,\n      o && \"progress-bar-striped\",\n      e && \"progress-bar-animated\",\n      s\n    ), h = { width: `${d}%`, ...r };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      n,\n      {\n        className: g,\n        style: h,\n        ref: m,\n        role: \"progressbar\",\n        ...p,\n        \"aria-valuenow\": Number(d) ?? a,\n        \"aria-valuemin\": Number(u),\n        \"aria-valuemax\": Number(c),\n        children: t\n      }\n    );\n  }\n);\nNe.displayName = \"MDBProgressBar\";\nconst ot = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", height: r, style: n, ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"progress\", e), i = { height: `${r}px`, ...n };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: o, ref: c, style: i, ...a, children: react__WEBPACK_IMPORTED_MODULE_1__.Children.map(t, (u) => {\n      if (!react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(u) || u.type !== Ne) {\n        console.error(\"Progress component only allows ProgressBar as child\");\n        return;\n      } else\n        return u;\n    }) });\n  }\n);\not.displayName = \"MDBProgress\";\nconst ct = (e) => {\n  const [t, s] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), r = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new IntersectionObserver(([n]) => {\n    s(n.isIntersecting);\n  }), []);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (e.current)\n      return r.observe(e.current), () => r.disconnect();\n  }, [r, e]), t;\n}, lt = (e, t) => (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => t !== void 0 ? t : e, [t, e]), it = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    className: e,\n    size: t,\n    contrast: s,\n    value: r,\n    defaultValue: n,\n    id: a,\n    labelClass: c,\n    wrapperClass: o,\n    wrapperStyle: i,\n    wrapperTag: u = \"div\",\n    label: d,\n    onChange: p,\n    children: m,\n    labelRef: g,\n    labelStyle: h,\n    type: v,\n    onBlur: b,\n    readonly: T = !1,\n    showCounter: R = !1,\n    ...N\n  }, k) => {\n    var Q, Z;\n    const [D, S] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(r || n), [E, F] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), [W, w] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [L, I] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), O = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), $ = ct(O);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(k, () => O.current);\n    const C = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), H = g || C, P = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-outline\", s && \"form-white\", o), X = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"form-control\",\n      W && \"active\",\n      v === \"date\" && \"active\",\n      t && `form-control-${t}`,\n      e\n    ), G = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-label\", c);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      if (!O.current)\n        return;\n      const { value: M } = O.current;\n      M != \"\" ? w(!0) : w(!1);\n    }, [(Q = O.current) == null ? void 0 : Q.value]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      r !== void 0 && (r != \"\" ? w(!0) : w(!1));\n    }, [r]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      n !== void 0 && (n != \"\" ? w(!0) : w(!1));\n    }, [n]);\n    const _ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n      var M;\n      (M = H.current) != null && M.clientWidth && F(H.current.clientWidth * 0.8 + 8);\n    }, [H]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      _();\n    }, [(Z = H.current) == null ? void 0 : Z.clientWidth, _, $]);\n    const J = (M) => {\n      S(M.target.value), R && I(M.target.value.length), p == null || p(M);\n    }, Y = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (M) => {\n        O.current && (D !== void 0 && D != \"\" || r !== void 0 && r != \"\" || O.current.value != \"\" ? w(!0) : w(!1), b && b(M));\n      },\n      [D, r, b]\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(u, { className: P, style: i, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"input\",\n        {\n          type: v,\n          readOnly: T,\n          className: X,\n          onBlur: Y,\n          onChange: J,\n          onFocus: _,\n          value: r,\n          defaultValue: n,\n          id: a,\n          ref: O,\n          ...N\n        }\n      ),\n      d && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: G, style: h, htmlFor: a, ref: H, children: d }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"form-notch\", children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-notch-leading\" }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-notch-middle\", style: { width: E } }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-notch-trailing\" })\n      ] }),\n      m,\n      R && N.maxLength && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-helper\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-counter\", children: `${L}/${N.maxLength}` }) })\n    ] });\n  }\n);\nit.displayName = \"MDBInput\";\nconst ue = ({\n  className: e,\n  inputRef: t,\n  labelClass: s,\n  wrapperClass: r,\n  labelStyle: n,\n  wrapperTag: a = \"div\",\n  wrapperStyle: c,\n  label: o,\n  inline: i,\n  btn: u,\n  id: d,\n  btnColor: p,\n  disableWrapper: m,\n  toggleSwitch: g,\n  ...h\n}) => {\n  let v = \"form-check-input\", b = \"form-check-label\";\n  u && (v = \"btn-check\", p ? b = `btn btn-${p}` : b = \"btn btn-primary\");\n  const T = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    o && !u && \"form-check\",\n    i && !u && \"form-check-inline\",\n    g && \"form-switch\",\n    r\n  ), R = clsx__WEBPACK_IMPORTED_MODULE_2__(v, e), N = clsx__WEBPACK_IMPORTED_MODULE_2__(b, s), k = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { className: R, id: d, ref: t, ...h }),\n    o && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: N, style: n, htmlFor: d, children: o })\n  ] });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: m ? k : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a, { style: c, className: T, children: k }) });\n}, ns = ({ ...e }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ue, { type: \"checkbox\", ...e }), as = ({ ...e }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ue, { type: \"radio\", ...e }), dt = ({\n  className: e,\n  children: t,\n  open: s = !1,\n  id: r,\n  navbar: n,\n  tag: a = \"div\",\n  collapseRef: c,\n  style: o,\n  onOpen: i,\n  onClose: u,\n  ...d\n}) => {\n  const [p, m] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [g, h] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0), [v, b] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), T = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    v ? \"collapsing\" : \"collapse\",\n    !v && p && \"show\",\n    n && \"navbar-collapse\",\n    e\n  ), R = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), N = c ?? R, k = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    p && h(void 0);\n  }, [p]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var D;\n    g === void 0 && p && h((D = N == null ? void 0 : N.current) == null ? void 0 : D.scrollHeight);\n  }, [g, p, N]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    p !== s && (s ? i == null || i() : u == null || u(), m(s)), p && b(!0);\n    const D = setTimeout(() => {\n      b(!1);\n    }, 350);\n    return () => {\n      clearTimeout(D);\n    };\n  }, [s, p, i, u]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var D;\n    h(p ? (D = N == null ? void 0 : N.current) == null ? void 0 : D.scrollHeight : 0);\n  }, [p, N, t]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => (window.addEventListener(\"resize\", k), () => {\n    window.removeEventListener(\"resize\", k);\n  }), [k]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a, { style: { height: g, ...o }, id: r, className: T, ...d, ref: N, children: t });\n}, we = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null), ut = ({\n  children: e,\n  isOpen: t = !1,\n  options: s,\n  animation: r = !0,\n  dropup: n,\n  dropright: a,\n  dropleft: c,\n  onClose: o,\n  onOpen: i\n}) => {\n  const [u, d] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(t), [p, m] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [g, h] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [v, b] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    we.Provider,\n    {\n      value: {\n        animation: r,\n        activeIndex: v,\n        isOpenState: u,\n        setReferenceElement: m,\n        setPopperElement: h,\n        setActiveIndex: b,\n        popperElement: g,\n        setIsOpenState: d,\n        referenceElement: p,\n        onClose: o,\n        onOpen: i,\n        dropup: n,\n        options: s,\n        dropright: a,\n        dropleft: c\n      },\n      children: e\n    }\n  );\n}, mt = (e) => e instanceof HTMLElement, ft = (e) => e instanceof Node, re = () => {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(we);\n  if (!e)\n    throw new Error(\"Missing context data\");\n  return e;\n}, pt = () => {\n  const { isOpenState: e, setIsOpenState: t, setActiveIndex: s, popperElement: r, referenceElement: n, onClose: a } = re(), c = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (o) => {\n      e && (a == null || a(o)), !(!e || !ft(o.target) || r && r.contains(o.target) || n && n.contains(o.target) || o.defaultPrevented) && (t(!1), setTimeout(() => s(-1), 300));\n    },\n    [e, t, s, r, n, a]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => (document.addEventListener(\"mousedown\", c), () => document.removeEventListener(\"mousedown\", c)), [c]);\n}, gt = ({\n  className: e,\n  tag: t = \"div\",\n  group: s,\n  children: r,\n  dropup: n,\n  dropright: a,\n  dropleft: c,\n  ...o\n}) => {\n  pt();\n  const i = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    s ? \"btn-group\" : \"dropdown\",\n    n && \"dropup\",\n    a && \"dropend\",\n    c && \"dropstart\",\n    e\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t, { className: i, ...o, children: r });\n}, os = ({ animation: e, onClose: t, onOpen: s, ...r }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ut, { animation: e, onClose: t, onOpen: s, ...r, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gt, { ...r }) }), ht = ({\n  childTag: e,\n  children: t,\n  disabled: s,\n  link: r,\n  divider: n,\n  header: a,\n  href: c = \"#\"\n}) => {\n  const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"dropdown-item\", s && \"disabled\");\n  return r ? e ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { className: o, children: t }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { href: c, className: o, children: t }) : n ? e ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { className: \"dropdown-divider\", children: t }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"hr\", { className: \"dropdown-divider\" }) : a ? e ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(e, { className: \"dropdown-header\", children: t }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h6\", { className: \"dropdown-header\", children: t }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: t });\n};\nconst cs = ({\n  onClick: e,\n  tag: t = \"li\",\n  childTag: s,\n  children: r,\n  style: n,\n  link: a,\n  divider: c,\n  header: o,\n  disabled: i,\n  href: u,\n  preventCloseOnClick: d,\n  ...p\n}) => {\n  const { setIsOpenState: m, onClose: g, setActiveIndex: h } = re();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t, { style: n, onClick: (b) => {\n    g == null || g(b), e == null || e(b), !(i || d || b.defaultPrevented) && (setTimeout(() => h(-1), 300), m(!1));\n  }, ...p, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    ht,\n    {\n      link: a,\n      divider: c,\n      header: o,\n      disabled: i,\n      href: u,\n      childTag: s,\n      children: r\n    }\n  ) });\n}, ge = (e, t, s) => s === \"up\" ? e <= 0 ? t[t.length - 1].props.divider === !0 || t[t.length - 1].props.disabled === !0 : t[e - 1].props.divider === !0 || t[e - 1].props.disabled === !0 : e === t.length - 1 ? t[0].props.divider === !0 || t[0].props.disabled === !0 : t[e + 1].props.divider === !0 || t[e + 1].props.disabled === !0, bt = (e) => {\n  const { activeIndex: t, isOpenState: s, setIsOpenState: r, setActiveIndex: n, onClose: a } = re(), c = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (o) => {\n      const i = [\"ArrowUp\", \"ArrowDown\", \"Tab\", \"Enter\", \"Escape\"];\n      if (!(!Array.isArray(e) || !i.includes(o.key))) {\n        if (mt(document.activeElement) && document.activeElement.blur(), o.key === \"ArrowUp\") {\n          o.preventDefault();\n          const u = ge(t, e, \"up\");\n          if (t === 1) {\n            n(u ? e.length - 1 : 0);\n            return;\n          }\n          if (t <= 0) {\n            n(u ? e.length - 2 : e.length - 1);\n            return;\n          }\n          n((d) => u ? d - 2 : d - 1);\n        }\n        if (o.key === \"ArrowDown\" || o.key === \"Tab\") {\n          o.preventDefault();\n          const u = ge(t, e, \"down\");\n          if (t === e.length - 2) {\n            n((d) => u ? 0 : d + 1);\n            return;\n          }\n          if (t === e.length - 1) {\n            n(u ? 1 : 0);\n            return;\n          }\n          n((d) => u ? d + 2 : d + 1);\n        }\n        if (o.key === \"Enter\") {\n          const u = document.querySelector('[data-active=\"true\"]'), d = u == null ? void 0 : u.firstElementChild;\n          if (d)\n            return d.click();\n          if (a == null || a(o), o.defaultPrevented)\n            return;\n          r(!1), setTimeout(() => n(-1), 300);\n        }\n        if (o.key === \"Escape\") {\n          if (a == null || a(o), o.defaultPrevented)\n            return;\n          r(!1), setTimeout(() => n(-1), 300);\n        }\n      }\n    },\n    [e, r, n, t, a]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => (s && document.addEventListener(\"keydown\", c), () => {\n    s && document.removeEventListener(\"keydown\", c);\n  }), [s, c]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const o = document.querySelector('[data-active=\"true\"]'), i = o == null ? void 0 : o.firstElementChild;\n    return i == null || i.focus(), () => i == null ? void 0 : i.blur();\n  }, [t]);\n}, vt = () => {\n  const { isOpenState: e } = re(), [t, s] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [r, n] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [a, c] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(e);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    let o;\n    return e || (n(!0), s(!1), o = setTimeout(() => {\n      n(!1), c(!1);\n    }, 300)), e && (s(!0), n(!1), c(!0), o = setTimeout(() => {\n      s(!1);\n    }, 300)), () => clearTimeout(o);\n  }, [e]), { open: a, isFadeIn: t, isFadeOut: r };\n};\nconst ls = ({\n  className: e,\n  tag: t = \"ul\",\n  children: s,\n  style: r,\n  dark: n,\n  responsive: a = \"\",\n  appendToBody: c = !1,\n  alwaysOpen: o,\n  ...i\n}) => {\n  const {\n    activeIndex: u,\n    setPopperElement: d,\n    isOpenState: p,\n    animation: m,\n    referenceElement: g,\n    popperElement: h,\n    options: v,\n    dropleft: b,\n    dropup: T,\n    dropright: R\n  } = re(), { open: N, isFadeIn: k, isFadeOut: D } = vt();\n  bt(s);\n  const S = () => {\n    if (R)\n      return \"right-start\";\n    if (b)\n      return \"left-start\";\n    const w = h && getComputedStyle(h).getPropertyValue(\"--mdb-position\").trim() === \"end\";\n    return T ? w ? \"top-end\" : \"top-start\" : w ? \"bottom-end\" : \"bottom-start\";\n  }, { styles: E } = (0,react_popper__WEBPACK_IMPORTED_MODULE_4__.usePopper)(g, h, {\n    placement: S(),\n    modifiers: [_popperjs_core__WEBPACK_IMPORTED_MODULE_5__.flip],\n    ...v\n  }), F = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    \"dropdown-menu\",\n    n && \"dropdown-menu-dark\",\n    p && \"show\",\n    m && \"animation\",\n    k && \"fade-in\",\n    D && \"fade-out\",\n    a && `dropdown-menu-${a}`,\n    e\n  );\n  if (!N && !o)\n    return null;\n  const W = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    t,\n    {\n      className: F,\n      style: { position: \"absolute\", zIndex: 1e3, ...E.popper, ...r },\n      ref: d,\n      ...i,\n      children: react__WEBPACK_IMPORTED_MODULE_1__.Children.map(\n        s,\n        (w, L) => (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(w, {\n          tabIndex: 1,\n          \"data-active\": u === L && !0,\n          className: clsx__WEBPACK_IMPORTED_MODULE_2__(u === L ? \"active\" : \"\", w.props.className)\n        })\n      )\n    }\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: c ? (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(W, document.body) : W });\n}, is = ({\n  className: e,\n  tag: t = le,\n  children: s,\n  onClick: r,\n  split: n,\n  ...a\n}) => {\n  const { setIsOpenState: c, setReferenceElement: o, isOpenState: i, setActiveIndex: u, onClose: d, onOpen: p } = re(), m = clsx__WEBPACK_IMPORTED_MODULE_2__(\"dropdown-toggle\", n && \"dropdown-toggle-split\", e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    t,\n    {\n      onClick: (h) => {\n        r == null || r(h), i ? d == null || d(h) : p == null || p(h), !h.defaultPrevented && (c((v) => !v), setTimeout(() => u(-1), 300));\n      },\n      ref: o,\n      className: m,\n      \"aria-expanded\": !!i,\n      ...a,\n      children: s\n    }\n  );\n}, ds = ({\n  className: e,\n  btnClassName: t,\n  btnChildren: s,\n  children: r,\n  tag: n = le,\n  onOpen: a,\n  onClose: c,\n  popperTag: o = \"div\",\n  open: i,\n  placement: u = \"bottom\",\n  dismiss: d,\n  options: p,\n  poperStyle: m,\n  onClick: g,\n  ...h\n}) => {\n  const [v, b] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(), [T, R] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(), { styles: N, attributes: k } = (0,react_popper__WEBPACK_IMPORTED_MODULE_4__.usePopper)(v, T, { placement: u, ...p }), [D, S] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(i ?? !1), E = lt(D, i), [F, W] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [w, L] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), I = clsx__WEBPACK_IMPORTED_MODULE_2__(\"popover fade\", F && E && \"show\", e), O = (C) => {\n    E && !d ? c == null || c() : E || a == null || a(), d ? (L(!0), S(!0)) : S(!E), g && g(C);\n  }, $ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (C) => {\n      w && T && E && v && !v.contains(C.target) && (S(!1), c == null || c());\n    },\n    [w, E, T, v, c]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const C = setTimeout(() => {\n      W(E);\n    }, 150);\n    return () => {\n      clearTimeout(C);\n    };\n  }, [E]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => (E && document.addEventListener(\"mousedown\", $), () => {\n    document.removeEventListener(\"mousedown\", $);\n  }), [$, E]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(n, { onClick: O, className: t, ...h, ref: b, children: s }),\n    (F || E) && react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal(\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        o,\n        {\n          className: I,\n          ref: R,\n          style: { ...N.popper, ...m },\n          ...k.popper,\n          children: r\n        }\n      ),\n      document.body\n    )\n  ] });\n}, us = ({\n  className: e,\n  children: t,\n  tag: s = \"div\",\n  ...r\n}) => {\n  const n = clsx__WEBPACK_IMPORTED_MODULE_2__(\"popover-body\", e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: n, ...r, children: t });\n}, ms = ({\n  className: e,\n  children: t,\n  tag: s = \"h3\",\n  ...r\n}) => {\n  const n = clsx__WEBPACK_IMPORTED_MODULE_2__(\"popover-header\", e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: n, ...r, children: t });\n}, fs = ({\n  animationDirection: e,\n  appendToBody: t,\n  backdrop: s = !0,\n  children: r,\n  className: n,\n  closeOnEsc: a = !0,\n  setOpen: c,\n  leaveHiddenModal: o = !0,\n  modalRef: i,\n  onClose: u,\n  onClosePrevented: d,\n  onOpen: p,\n  open: m,\n  staticBackdrop: g,\n  nonInvasive: h = !1,\n  tag: v = \"div\",\n  ...b\n}) => {\n  const [T, R] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(m), [N, k] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(m), [D, S] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(m), [E, F] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), [W, w] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), [L, I] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]), O = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), $ = i || O, C = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    \"modal\",\n    E && \"modal-static\",\n    e,\n    \"fade\",\n    N && \"show\",\n    T && h && \"modal-non-invasive-show\",\n    n\n  ), H = clsx__WEBPACK_IMPORTED_MODULE_2__(\"modal-backdrop\", \"fade\", T && \"show\"), P = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    k((Y) => (Y && (u == null || u()), !1)), setTimeout(() => {\n      R(!1), c == null || c(!1);\n    }, 150), setTimeout(() => {\n      S(!1);\n    }, 350);\n  }, [u, c]), X = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (Y) => {\n      h || N && Y.target === $.current && (g ? (F(!0), d == null || d(), setTimeout(() => {\n        F(!1);\n      }, 300)) : P());\n    },\n    [N, $, g, P, d, h]\n  ), G = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (Y) => {\n      N && Y.key === \"Tab\" && (Y.preventDefault(), w(W + 1)), a && N && Y.key === \"Escape\" && (g ? (F(!0), d == null || d(), setTimeout(() => {\n        F(!1);\n      }, 300)) : P());\n    },\n    [N, a, W, g, P, d]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var Z;\n    const Y = (Z = $.current) == null ? void 0 : Z.querySelectorAll(\n      \"button, a, input, select, textarea, [tabindex]\"\n    ), Q = Array.from(Y).filter((M) => M.tabIndex !== -1).sort((M, A) => M.tabIndex === A.tabIndex ? 0 : A.tabIndex === null ? -1 : M.tabIndex === null ? 1 : M.tabIndex - A.tabIndex);\n    I(Q), w(Q.length - 1);\n  }, [$]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    L && L.length > 0 && (W === L.length ? (L[0].focus(), w(0)) : L[W].focus());\n  }, [W, L]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const Y = () => {\n      const Z = document.documentElement.clientWidth;\n      return Math.abs(window.innerWidth - Z);\n    }, Q = window.innerWidth > document.documentElement.clientWidth && window.innerWidth >= 576;\n    if (D && Q && !h) {\n      const Z = Y();\n      document.body.classList.add(\"modal-open\"), document.body.style.overflow = \"hidden\", document.body.style.paddingRight = `${Z}px`;\n    } else\n      document.body.classList.remove(\"modal-open\"), document.body.style.overflow = \"\", document.body.style.paddingRight = \"\";\n    return () => {\n      document.body.classList.remove(\"modal-open\"), document.body.style.overflow = \"\", document.body.style.paddingRight = \"\";\n    };\n  }, [D, h]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    m ? (p == null || p(), S(!0), setTimeout(() => {\n      R(!0);\n    }, 0), setTimeout(() => {\n      k(!0), c == null || c(!0);\n    }, 150)) : P();\n  }, [m, P, c, p]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const Y = (Q) => {\n      Q.target.closest(\".modal-dialog\") || window.addEventListener(\"mouseup\", X, { once: !0 });\n    };\n    return window.addEventListener(\"mousedown\", Y), window.addEventListener(\"keydown\", G), () => {\n      window.removeEventListener(\"mousedown\", Y), window.removeEventListener(\"keydown\", G);\n    };\n  }, [G, X]);\n  const _ = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: (o || m || D) && react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal(\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        v,\n        {\n          className: C,\n          ref: $,\n          style: { display: D || m ? \"block\" : \"none\", pointerEvents: h ? \"none\" : \"initial\" },\n          ...b,\n          children: r\n        }\n      ),\n      react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal(\n        s && D && !h && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: H }),\n        document.body\n      )\n    ] }),\n    document.body\n  ) }), J = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: (o || m || D) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      v,\n      {\n        className: C,\n        ref: $,\n        style: { display: D || m ? \"block\" : \"none\", pointerEvents: h ? \"none\" : \"initial\" },\n        ...b,\n        children: r\n      }\n    ),\n    react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal(\n      s && D && !h && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { onClick: P, className: H }),\n      document.body\n    )\n  ] }) });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: t ? _ : J });\n}, yt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, centered: t, children: s, size: r, scrollable: n, tag: a = \"div\", ...c }, o) => {\n    const i = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"modal-dialog\",\n      n && \"modal-dialog-scrollable\",\n      t && \"modal-dialog-centered\",\n      r && `modal-${r}`,\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a, { className: i, ...c, ref: o, children: s });\n  }\n);\nyt.displayName = \"MDBModalDialog\";\nconst Nt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"modal-content\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nNt.displayName = \"MDBModalContent\";\nconst wt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"modal-header\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nwt.displayName = \"MDBModalHeader\";\nconst Bt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"h5\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"modal-title\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nBt.displayName = \"MDBModalTitle\";\nconst Mt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"modal-body\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nMt.displayName = \"MDBModalBody\";\nconst Dt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, tag: s = \"div\", ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"modal-footer\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s, { className: a, ...r, ref: n, children: t });\n  }\n);\nDt.displayName = \"MDBModalFooter\";\nconst me = react__WEBPACK_IMPORTED_MODULE_1__.createContext({\n  activeElement: null,\n  setTargets: null\n}), ps = ({\n  container: e = typeof window !== void 0 ? window : null,\n  className: t,\n  children: s,\n  offset: r = 10,\n  ...n\n}) => {\n  const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"sticky-top\", t), [c, o] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), [i, u] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]), d = e instanceof Window, p = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    var T, R, N;\n    if (!i.length)\n      return;\n    const m = d ? window.pageYOffset : (T = e == null ? void 0 : e.current) == null ? void 0 : T.scrollTop, g = Number(r), h = (R = i[i.length - 1]) == null ? void 0 : R.current, v = (N = i[0]) == null ? void 0 : N.current;\n    m + g < v.offsetTop && o(null), i.forEach((k, D) => {\n      var W;\n      const S = (W = i[D + 1]) == null ? void 0 : W.current, E = k.current;\n      if (m > E.offsetTop - g && m < (S == null ? void 0 : S.offsetTop) - g) {\n        o(E);\n        return;\n      }\n    }), m > h.offsetTop - g && o(h);\n  }, [r, i, d, e]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const m = d ? e : e == null ? void 0 : e.current;\n    return p(), m == null || m.addEventListener(\"scroll\", p), () => {\n      m == null || m.removeEventListener(\"scroll\", p);\n    };\n  }, [p, e, d]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: a, ...n, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", { className: \"nav flex-column nav-pills menu-sidebar\", children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(me.Provider, { value: { activeElement: c, setTargets: u }, children: s }) }) });\n}, gs = ({\n  className: e,\n  collapsible: t,\n  targetRef: s,\n  children: r,\n  subsections: n,\n  onClick: a,\n  onActivate: c,\n  ...o\n}) => {\n  var v;\n  const { activeElement: i, setTargets: u } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(me), d = () => n == null ? void 0 : n.some((b) => b.current.id === (i == null ? void 0 : i.id)), p = (i == null ? void 0 : i.id) === ((v = s.current) == null ? void 0 : v.id), m = p || d();\n  p && (c == null || c(i == null ? void 0 : i.id));\n  const g = clsx__WEBPACK_IMPORTED_MODULE_2__(\"nav-link\", t && \"collapsible-scrollspy\", m && \"active\", e), h = (b) => {\n    const T = s == null ? void 0 : s.current;\n    T == null || T.scrollIntoView({ behavior: \"smooth\" }), a == null || a(b);\n  };\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    u((b) => [...b, s]);\n  }, [u, s]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", { className: \"nav-item\", style: { cursor: \"pointer\" }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { className: g, onClick: h, ...o, children: r }) });\n}, hs = ({\n  collapsible: e,\n  className: t,\n  children: s,\n  style: r,\n  ...n\n}) => {\n  const [a, c] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"0px\"), { activeElement: o } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(me), i = clsx__WEBPACK_IMPORTED_MODULE_2__(\"nav flex-column\", t), u = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const p = () => e == null ? void 0 : e.some((g) => g.current.id === (o == null ? void 0 : o.id)), m = u.current;\n    p() ? c(`${m == null ? void 0 : m.scrollHeight}px`) : c(\"0px\");\n  }, [o, e]);\n  const d = {\n    overflow: \"hidden\",\n    height: a,\n    transition: \"height .5s ease\",\n    flexWrap: \"nowrap\",\n    ...r\n  };\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", { className: i, ref: u, style: e ? d : r, ...n, children: s });\n}, bs = ({ ...e }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ue, { type: \"checkbox\", toggleSwitch: !0, ...e }), Tt = ({ value: e, min: t = \"0\", max: s = \"100\", showThumb: r }) => {\n  const n = Number(e), [a, c] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n    (n || 0 - Number(t)) * 100 / (Number(s) - Number(t))\n  ), o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"thumb\", r && \"thumb-active\");\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    c((Number(e) - Number(t)) * 100 / (Number(s) - Number(t)));\n  }, [e, s, t]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: o, style: { left: `calc(${a}% + (${8 - a * 0.15}px))` }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: \"thumb-value\", children: e }) });\n}, vs = ({\n  className: e,\n  defaultValue: t = 0,\n  disableTooltip: s,\n  labelId: r,\n  max: n,\n  min: a,\n  onMouseDown: c,\n  onMouseUp: o,\n  onTouchStart: i,\n  onTouchEnd: u,\n  onChange: d,\n  labelClass: p,\n  value: m,\n  label: g,\n  id: h,\n  inputRef: v,\n  ...b\n}) => {\n  const [T, R] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(t), [N, k] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), D = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-range\", e), S = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-label\", p);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    g && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: S, id: r, htmlFor: h, children: g }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"range\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"input\",\n        {\n          type: \"range\",\n          onMouseDown: (I) => {\n            k(!0), c && c(I);\n          },\n          onMouseUp: (I) => {\n            k(!1), o && o(I);\n          },\n          onTouchStart: (I) => {\n            k(!0), i && i(I);\n          },\n          onTouchEnd: (I) => {\n            k(!1), u && u(I);\n          },\n          onChange: (I) => {\n            R(I.target.value), d && d(I);\n          },\n          className: D,\n          value: m || T,\n          id: h,\n          min: a,\n          max: n,\n          ref: v,\n          ...b\n        }\n      ),\n      !s && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tt, { value: m || T, showThumb: N, min: a, max: n })\n    ] })\n  ] });\n}, ys = ({ className: e, labelClass: t, labelStyle: s, inputRef: r, size: n, label: a, id: c, ...o }) => {\n  const i = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-control\", `form-control-${n}`, e), u = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-label\", t);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    a && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: u, style: s, htmlFor: c, children: a }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { className: i, type: \"file\", id: c, ref: r, ...o })\n  ] });\n}, Rt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    className: e,\n    children: t,\n    noBorder: s,\n    textBefore: r,\n    textAfter: n,\n    noWrap: a,\n    tag: c = \"div\",\n    textTag: o = \"span\",\n    textClass: i,\n    size: u,\n    textProps: d,\n    ...p\n  }, m) => {\n    const g = clsx__WEBPACK_IMPORTED_MODULE_2__(\"input-group\", a && \"flex-nowrap\", u && `input-group-${u}`, e), h = clsx__WEBPACK_IMPORTED_MODULE_2__(\"input-group-text\", s && \"border-0\", i), v = (b) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: b && Array.isArray(b) ? b.map((T, R) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(o, { className: h, ...d, children: T }, R)) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(o, { className: h, ...d, children: b }) });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(c, { className: g, ref: m, ...p, children: [\n      r && v(r),\n      t,\n      n && v(n)\n    ] });\n  }\n);\nRt.displayName = \"MDBInputGroup\";\nconst $t = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, isValidated: s = !1, onReset: r, onSubmit: n, noValidate: a = !0, ...c }, o) => {\n    const [i, u] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(s), d = clsx__WEBPACK_IMPORTED_MODULE_2__(\"needs-validation\", i && \"was-validated\", e), p = (g) => {\n      g.preventDefault(), u(!0), n && n(g);\n    }, m = (g) => {\n      g.preventDefault(), u(!1), r && r(g);\n    };\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      u(s);\n    }, [s]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      \"form\",\n      {\n        className: d,\n        onSubmit: p,\n        onReset: m,\n        ref: o,\n        noValidate: a,\n        ...c,\n        children: t\n      }\n    );\n  }\n);\n$t.displayName = \"MDBValidation\";\nconst Et = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, fill: t, pills: s, justify: r, children: n, ...a }, c) => {\n    const o = clsx__WEBPACK_IMPORTED_MODULE_2__(\n      \"nav\",\n      s ? \"nav-pills\" : \"nav-tabs\",\n      t && \"nav-fill\",\n      r && \"nav-justified\",\n      e\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", { className: o, ref: c, ...a, children: n });\n  }\n);\nEt.displayName = \"MDBTabs\";\nconst It = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, children: t, style: s, tag: r = \"li\", ...n }, a) => {\n    const c = clsx__WEBPACK_IMPORTED_MODULE_2__(\"nav-item\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(r, { className: c, style: { cursor: \"pointer\", ...s }, role: \"presentation\", ref: a, ...n, children: t });\n  }\n);\nIt.displayName = \"MDBTabsItem\";\nconst Lt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, color: t, active: s, onOpen: r, onClose: n, children: a, ...c }, o) => {\n    const i = clsx__WEBPACK_IMPORTED_MODULE_2__(\"nav-link\", s && \"active\", t && `bg-${t}`, e);\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      s ? r == null || r() : n == null || n();\n    }, [s]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { className: i, ref: o, ...c, children: a });\n  }\n);\nLt.displayName = \"MDBTabsLink\";\nconst xt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, tag: t = \"div\", children: s, ...r }, n) => {\n    const a = clsx__WEBPACK_IMPORTED_MODULE_2__(\"tab-content\", e);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t, { className: a, ref: n, ...r, children: s });\n  }\n);\nxt.displayName = \"MDBTabsContent\";\nconst kt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ className: e, tag: t = \"div\", open: s, children: r, ...n }, a) => {\n    const [c, o] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), i = clsx__WEBPACK_IMPORTED_MODULE_2__(\"tab-pane\", \"fade\", c && \"show\", s && \"active\", e);\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      let u;\n      return s ? u = setTimeout(() => {\n        o(!0);\n      }, 100) : o(!1), () => {\n        clearTimeout(u);\n      };\n    }, [s]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t, { className: i, role: \"tabpanel\", ref: a, ...n, children: r });\n  }\n);\nkt.displayName = \"MDBTabsPane\";\nconst fe = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  active: 0\n}), St = ({ imagesCount: e, to: t }) => {\n  const { active: s } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fe);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ol\", { className: \"carousel-indicators\", children: Array.from(Array(e)).map((r, n) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", { \"data-mdb-target\": n, className: clsx__WEBPACK_IMPORTED_MODULE_2__(s === n && \"active\"), onClick: () => t(n) }, n)) });\n}, Ct = ({ move: e }) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", { role: \"button\", className: \"carousel-control-prev\", onClick: () => e(\"prev\"), children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: \"carousel-control-prev-icon\" }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: \"visually-hidden\", children: \"Previous\" })\n  ] }),\n  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", { role: \"button\", className: \"carousel-control-next\", onClick: () => e(\"next\"), children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: \"carousel-control-next-icon\" }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { className: \"visually-hidden\", children: \"Next\" })\n  ] })\n] }), At = (e) => {\n  const t = getComputedStyle(e), s = getComputedStyle(e == null ? void 0 : e.parentNode);\n  return t.display !== \"none\" && s.display !== \"none\" && t.visibility !== \"hidden\";\n}, Pt = (e) => Array.from(e == null ? void 0 : e.querySelectorAll(\".carousel-item\")), Ft = (e) => e.offsetHeight, Ot = (e, t, s = !0) => {\n  if (!s) {\n    he(e);\n    return;\n  }\n  const r = Ht(t);\n  t.addEventListener(\"transitionend\", () => he(e), { once: !0 }), Xt(t, r);\n}, he = (e) => {\n  typeof e == \"function\" && e();\n}, Ht = (e) => {\n  if (!e)\n    return 0;\n  let { transitionDuration: t, transitionDelay: s } = window.getComputedStyle(e);\n  const r = Number.parseFloat(t), n = Number.parseFloat(s);\n  return !r && !n ? 0 : (t = t.split(\",\")[0], s = s.split(\",\")[0], (Number.parseFloat(t) + Number.parseFloat(s)) * 1e3);\n}, Wt = (e) => {\n  e.dispatchEvent(new Event(\"transitionend\"));\n}, Xt = (e, t) => {\n  let s = !1;\n  const n = t + 5;\n  function a() {\n    s = !0, e.removeEventListener(\"transitionend\", a);\n  }\n  e.addEventListener(\"transitionend\", a), setTimeout(() => {\n    s || Wt(e);\n  }, n);\n}, Ns = ({\n  fade: e = !1,\n  className: t,\n  carouselInnerClassName: s,\n  dark: r,\n  children: n,\n  interval: a = 5e3,\n  keyboard: c = !1,\n  touch: o = !0,\n  showControls: i,\n  showIndicators: u,\n  onSlide: d,\n  ...p\n}) => {\n  const m = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]), g = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), h = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0), v = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1), [b, T] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), [R, N] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), [k, D] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({ initialX: 0, initialY: 0 }), [S, E] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1), F = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), W = clsx__WEBPACK_IMPORTED_MODULE_2__(\"carousel\", \"slide\", e && \"carousel-fade\", r && \"carousel-dark\", t), w = clsx__WEBPACK_IMPORTED_MODULE_2__(\"carousel-inner\", s), L = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (M, A) => {\n      if (A !== void 0)\n        h.current = A, T(A);\n      else {\n        const K = b === R - 1 ? 0 : b + 1, ee = b === 0 ? R - 1 : b - 1;\n        h.current = M === \"next\" ? K : ee, T(M === \"next\" ? K : ee);\n      }\n    },\n    [b, R]\n  ), I = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    g.current && (clearInterval(g.current), g.current = null);\n  }, []), O = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (M, A, K) => {\n      var pe;\n      if (!m.current || m.current.length < 2)\n        return;\n      E(!0);\n      const z = m.current[b], te = Boolean(g.current), oe = M === \"next\", ce = oe ? \"carousel-item-start\" : \"carousel-item-end\", ie = oe ? \"carousel-item-next\" : \"carousel-item-prev\";\n      if (A.classList.contains(\"active\")) {\n        v.current = !1;\n        return;\n      }\n      L(M, K), !(!z || !A) && (v.current = !0, te && I(), (pe = F.current) != null && pe.classList.contains(\"slide\") ? (A.classList.add(ie), Ft(A), z.classList.add(ce), A.classList.add(ce), Ot(() => {\n        E(!1), A.classList.remove(ce, ie), A.classList.add(\"active\"), z.classList.remove(\"active\", ie, ce), v.current = !1;\n      }, z, !0)) : (z.classList.remove(\"active\"), A.classList.add(\"active\"), v.current = !1));\n    },\n    [F, b, L, I]\n  ), $ = (M) => {\n    v.current || (v.current = !0, setTimeout(() => {\n      v.current = !1;\n    }, M));\n  }, C = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (M) => {\n      const A = M === \"prev\", z = (h.current + (A ? -1 : 1)) % R, te = m.current;\n      return z === -1 ? te[R - 1] : te[z];\n    },\n    [R]\n  ), H = (M) => {\n    const A = h.current, K = M > A ? \"next\" : \"prev\", ee = m.current;\n    return { direction: K, nextElement: ee[M] };\n  }, P = (M) => {\n    if (v.current || ($(700), M > R - 1 || M < 0))\n      return;\n    const { direction: A, nextElement: K } = H(M);\n    O(A, K, M);\n  }, X = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (M) => {\n      if (v.current)\n        return;\n      $(600);\n      const A = C(M);\n      O(M, A);\n    },\n    [C, O]\n  ), G = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    const { visibilityState: M, hidden: A } = document;\n    if (M)\n      return A || !At(F.current) ? void 0 : X(\"next\");\n    X(\"next\");\n  }, [F, X]), _ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    var A, K;\n    const M = (K = (A = n == null ? void 0 : n[b]) == null ? void 0 : A.props) == null ? void 0 : K.interval;\n    g.current && (clearInterval(g.current), g.current = null), g.current = setInterval(G, M || a);\n  }, [G, a, n, b]), J = (M) => {\n    o && D({ initialX: M.touches[0].clientX, initialY: M.touches[0].clientY });\n  }, Y = (M) => {\n    v.current = !0;\n    const { initialX: A, initialY: K } = k;\n    if (!A || !K)\n      return;\n    const ee = M.touches[0].clientX, z = M.touches[0].clientY, te = A - ee, oe = K - z;\n    Math.abs(te) > Math.abs(oe) && (te > 0 ? X(\"prev\") : X(\"next\")), D({ initialX: 0, initialY: 0 });\n  }, Q = () => {\n    v.current = !1;\n  }, Z = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (M) => {\n      switch (M.key) {\n        case \"ArrowLeft\":\n          M.preventDefault(), X(\"prev\");\n          break;\n        case \"ArrowRight\":\n          M.preventDefault(), X(\"next\");\n          break;\n      }\n    },\n    [X]\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (c)\n      return window.addEventListener(\"keydown\", Z), () => {\n        window.removeEventListener(\"keydown\", Z);\n      };\n  }, [Z, c]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const M = F.current, A = Pt(M);\n    m.current = A, N(A.length);\n  }, [F]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    S && (d == null || d());\n  }, [S, d]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => (_(), () => {\n    I();\n  }), [_, I]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"div\",\n    {\n      onTouchStart: J,\n      onTouchMove: Y,\n      onTouchEnd: Q,\n      onMouseEnter: I,\n      onMouseLeave: _,\n      className: W,\n      ref: F,\n      ...p,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: w, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(fe.Provider, { value: { active: b }, children: [\n        u && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(St, { to: P, imagesCount: R }),\n        n,\n        i && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ct, { move: X })\n      ] }) })\n    }\n  );\n}, ws = ({ className: e, children: t, itemId: s, ...r }) => {\n  const { active: n } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fe), a = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!0), c = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), o = clsx__WEBPACK_IMPORTED_MODULE_2__(\"carousel-item\", e);\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (a.current && n === s - 1) {\n      const i = c.current;\n      i == null || i.classList.add(\"active\");\n    }\n    a.current = !1;\n  }, [n, s]), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: o, ref: c, ...r, children: t });\n}, Bs = ({ className: e, children: t, ...s }) => {\n  const r = clsx__WEBPACK_IMPORTED_MODULE_2__(\"carousel-caption d-none d-md-block\", e);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: r, ...s, children: t });\n}, Be = react__WEBPACK_IMPORTED_MODULE_1__.createContext({\n  activeItem: 0,\n  setActiveItem: null,\n  alwaysOpen: !1,\n  initialActive: 0\n}), _t = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    alwaysOpen: e,\n    borderless: t,\n    className: s,\n    flush: r,\n    active: n,\n    initialActive: a = 0,\n    tag: c = \"div\",\n    children: o,\n    onChange: i,\n    ...u\n  }, d) => {\n    const p = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => typeof n < \"u\", [n]), m = clsx__WEBPACK_IMPORTED_MODULE_2__(\"accordion\", r && \"accordion-flush\", t && \"accordion-borderless\", s), [g, h] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(a);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(c, { className: m, ref: d, ...u, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Be.Provider,\n      {\n        value: { activeItem: p ? n : g, setActiveItem: h, alwaysOpen: e, initialActive: a, onChange: i },\n        children: o\n      }\n    ) });\n  }\n);\n_t.displayName = \"MDBAccordion\";\nconst jt = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({\n    className: e,\n    bodyClassName: t,\n    bodyStyle: s,\n    headerClassName: r,\n    collapseId: n,\n    headerTitle: a,\n    headerStyle: c,\n    btnClassName: o,\n    tag: i = \"div\",\n    children: u,\n    ...d\n  }, p) => {\n    const { activeItem: m, setActiveItem: g, alwaysOpen: h, onChange: v } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Be), b = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => Array.isArray(m) ? m.includes(n) : m === n, [m, n]), T = clsx__WEBPACK_IMPORTED_MODULE_2__(\"accordion-item\", e), R = clsx__WEBPACK_IMPORTED_MODULE_2__(\"accordion-header\", r), N = clsx__WEBPACK_IMPORTED_MODULE_2__(\"accordion-body\", t), k = clsx__WEBPACK_IMPORTED_MODULE_2__(\"accordion-button\", !b && \"collapsed\", o), D = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (S) => {\n        let E = S;\n        Array.isArray(m) ? m.includes(S) ? E = m.filter((W) => W !== S) : E = h ? [...m, S] : [S] : (E = m === S ? 0 : S, h && (E = [E])), v == null || v(E), g(E);\n      },\n      [v, m, g, h]\n    );\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(i, { className: T, ref: p, ...d, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h2\", { className: R, style: c, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", { onClick: () => D(n), className: k, type: \"button\", children: a }) }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dt, { id: n.toString(), open: b, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: N, style: s, children: u }) })\n    ] });\n  }\n);\njt.displayName = \"MDBAccordionItem\";\nconst Ms = ({\n  className: e,\n  size: t,\n  contrast: s,\n  value: r,\n  defaultValue: n,\n  id: a,\n  labelClass: c,\n  wrapperClass: o,\n  wrapperStyle: i,\n  wrapperTag: u = \"div\",\n  label: d,\n  onChange: p,\n  children: m,\n  labelRef: g,\n  labelStyle: h,\n  inputRef: v,\n  onBlur: b,\n  readonly: T = !1,\n  ...R\n}) => {\n  var G;\n  const N = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), k = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), D = g || N, S = v || k, [E, F] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(r || n), [W, w] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), [L, I] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\n    r !== void 0 && r.length > 0 || n !== void 0 && n.length > 0\n  ), O = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-outline\", s && \"form-white\", o), $ = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-control\", L && \"active\", t && `form-control-${t}`, e), C = clsx__WEBPACK_IMPORTED_MODULE_2__(\"form-label\", c);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var _;\n    D.current && ((_ = D.current) == null ? void 0 : _.clientWidth) !== 0 && w(D.current.clientWidth * 0.8 + 8);\n  }, [D, (G = D.current) == null ? void 0 : G.clientWidth]);\n  const H = () => {\n    D.current && w(D.current.clientWidth * 0.8 + 8);\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    r !== void 0 && (r.length > 0 ? I(!0) : I(!1));\n  }, [r]), (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    n !== void 0 && (n.length > 0 ? I(!0) : I(!1));\n  }, [n]);\n  const P = (_) => {\n    F(_.currentTarget.value), p && p(_);\n  }, X = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (_) => {\n      E !== void 0 && E.length > 0 || r !== void 0 && r.length > 0 ? I(!0) : I(!1), b && b(_);\n    },\n    [E, r, b]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(u, { className: O, style: { ...i }, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      \"textarea\",\n      {\n        readOnly: T,\n        className: $,\n        onBlur: X,\n        onChange: P,\n        onFocus: H,\n        defaultValue: n,\n        value: r,\n        id: a,\n        ref: S,\n        ...R\n      }\n    ),\n    d && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: C, style: h, htmlFor: a, ref: D, children: d }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"form-notch\", children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-notch-leading\" }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-notch-middle\", style: { width: W } }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"form-notch-trailing\" })\n    ] }),\n    m\n  ] });\n}, Ds = ({\n  children: e,\n  invalid: t,\n  feedback: s = \"Looks good!\",\n  tooltip: r,\n  tag: n = \"div\",\n  ...a\n}) => {\n  const [c, o] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), i = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null), u = clsx__WEBPACK_IMPORTED_MODULE_2__(\n    t ? `invalid-${r ? \"tooltip\" : \"feedback\"}` : `valid-${r ? \"tooltip\" : \"feedback\"}`\n  );\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var p, m;\n    const d = (m = (p = i.current) == null ? void 0 : p.querySelector(\"input, textarea\")) == null ? void 0 : m.parentElement;\n    d && o(d);\n  }, []), /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(n, { ref: i, ...a, children: [\n    c && (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(/* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: u, children: s }), c),\n    e\n  ] });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mdb-react-ui-kit/dist/mdb-react-ui-kit.esm.js\n");

/***/ })

};
;